NearestNeighbors = ["KNNClassifier", "KNNRegressor"]
ScikitLearn = ["SVMNuClassifier", "GaussianProcessRegressor", "LassoCVRegressor", "LarsRegressor", "ElasticNetRegressor", "RandomForestRegressor", "ElasticNetCVRegressor", "LassoLarsRegressor", "SVMLClassifier", "AdaBoostRegressor", "LarsCVRegressor", "MultiTaskElasticNetRegressor", "LinearRegressor", "MultiTaskLassoCVRegressor", "MultiTaskLassoRegressor", "OrthogonalMatchingPursuitRegressor", "RidgeCVRegressor", "SVMRegressor", "MultiTaskElasticNetCVRegressor", "RidgeRegressor", "LassoLarsCVRegressor", "LassoLarsICRegressor", "BaggingRegressor", "ARDRegressor", "LassoRegressor", "SVMNuRegressor", "OrthogonalMatchingPursuitCVRegressor", "PassiveAggressiveRegressor", "GradientBoostingRegressor", "BayesianRidgeRegressor", "SGDRegressor", "SVMClassifier", "SVMLRegressor", "TheilSenRegressor", "HuberRegressor"]
ScientificTypes = []
NaiveBayes = ["GaussianNBClassifier", "MultinomialNBClassifier"]
MultivariateStats = ["ICA", "RidgeRegressor", "KernelPCA", "PCA"]
DecisionTree = ["DecisionTreeRegressor", "DecisionTreeClassifier"]
Clustering = ["KMeans", "KMedoids"]
XGBoost = ["XGBoostCount", "XGBoostRegressor", "XGBoostClassifier"]
MLJModels = ["UnivariateBoxCoxTransformer", "DeterministicConstantRegressor", "OneHotEncoder", "ConstantClassifier", "Standardizer", "ConstantRegressor", "FeatureSelector", "StaticTransformer", "UnivariateStandardizer", "DeterministicConstantClassifier"]
LIBSVM = ["EpsilonSVR", "LinearSVC", "NuSVR", "NuSVC", "SVC", "OneClassSVM"]
GLM = ["LinearBinaryClassifier", "LinearCountRegressor", "LinearRegressor"]
